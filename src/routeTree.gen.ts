/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as AuthRouteRouteImport } from './routes/auth/route';
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route';
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index';
import { Route as AuthLoginRouteImport } from './routes/auth/login';
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route';
import { Route as AuthenticatedStaffIndexRouteImport } from './routes/_authenticated/staff/index';
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index';
import { Route as AuthenticatedPaymentsIndexRouteImport } from './routes/_authenticated/payments/index';
import { Route as AuthenticatedInvoicesIndexRouteImport } from './routes/_authenticated/invoices/index';
import { Route as AuthenticatedExpensesIndexRouteImport } from './routes/_authenticated/expenses/index';
import { Route as AuthenticatedBudgetsIndexRouteImport } from './routes/_authenticated/budgets/index';
import { Route as AuthenticatedSettingsMiscRouteImport } from './routes/_authenticated/settings/misc';
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account';
import { Route as AuthenticatedPaymentsPaymentIdRouteImport } from './routes/_authenticated/payments/$paymentId';
import { Route as AuthenticatedInvoicesInvoiceIdRouteImport } from './routes/_authenticated/invoices/$invoiceId';
import { Route as AuthenticatedExpensesExpenseIdRouteImport } from './routes/_authenticated/expenses/$expenseId';
import { Route as AuthenticatedBudgetsBudgetIdRouteImport } from './routes/_authenticated/budgets/$budgetId';

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport
} as any);
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport
} as any);
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute
} as any);
const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedStaffIndexRoute = AuthenticatedStaffIndexRouteImport.update({
  id: '/staff/',
  path: '/staff/',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedSettingsRouteRoute
} as any);
const AuthenticatedPaymentsIndexRoute = AuthenticatedPaymentsIndexRouteImport.update({
  id: '/payments/',
  path: '/payments/',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedInvoicesIndexRoute = AuthenticatedInvoicesIndexRouteImport.update({
  id: '/invoices/',
  path: '/invoices/',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedExpensesIndexRoute = AuthenticatedExpensesIndexRouteImport.update({
  id: '/expenses/',
  path: '/expenses/',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedBudgetsIndexRoute = AuthenticatedBudgetsIndexRouteImport.update({
  id: '/budgets/',
  path: '/budgets/',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedSettingsMiscRoute = AuthenticatedSettingsMiscRouteImport.update({
  id: '/misc',
  path: '/misc',
  getParentRoute: () => AuthenticatedSettingsRouteRoute
} as any);
const AuthenticatedSettingsAccountRoute = AuthenticatedSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthenticatedSettingsRouteRoute
} as any);
const AuthenticatedPaymentsPaymentIdRoute = AuthenticatedPaymentsPaymentIdRouteImport.update({
  id: '/payments/$paymentId',
  path: '/payments/$paymentId',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedInvoicesInvoiceIdRoute = AuthenticatedInvoicesInvoiceIdRouteImport.update({
  id: '/invoices/$invoiceId',
  path: '/invoices/$invoiceId',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedExpensesExpenseIdRoute = AuthenticatedExpensesExpenseIdRouteImport.update({
  id: '/expenses/$expenseId',
  path: '/expenses/$expenseId',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);
const AuthenticatedBudgetsBudgetIdRoute = AuthenticatedBudgetsBudgetIdRouteImport.update({
  id: '/budgets/$budgetId',
  path: '/budgets/$budgetId',
  getParentRoute: () => AuthenticatedRouteRoute
} as any);

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteRouteWithChildren;
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren;
  '/auth/login': typeof AuthLoginRoute;
  '/': typeof AuthenticatedIndexRoute;
  '/budgets/$budgetId': typeof AuthenticatedBudgetsBudgetIdRoute;
  '/expenses/$expenseId': typeof AuthenticatedExpensesExpenseIdRoute;
  '/invoices/$invoiceId': typeof AuthenticatedInvoicesInvoiceIdRoute;
  '/payments/$paymentId': typeof AuthenticatedPaymentsPaymentIdRoute;
  '/settings/account': typeof AuthenticatedSettingsAccountRoute;
  '/settings/misc': typeof AuthenticatedSettingsMiscRoute;
  '/budgets': typeof AuthenticatedBudgetsIndexRoute;
  '/expenses': typeof AuthenticatedExpensesIndexRoute;
  '/invoices': typeof AuthenticatedInvoicesIndexRoute;
  '/payments': typeof AuthenticatedPaymentsIndexRoute;
  '/settings/': typeof AuthenticatedSettingsIndexRoute;
  '/staff': typeof AuthenticatedStaffIndexRoute;
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren;
  '/auth/login': typeof AuthLoginRoute;
  '/': typeof AuthenticatedIndexRoute;
  '/budgets/$budgetId': typeof AuthenticatedBudgetsBudgetIdRoute;
  '/expenses/$expenseId': typeof AuthenticatedExpensesExpenseIdRoute;
  '/invoices/$invoiceId': typeof AuthenticatedInvoicesInvoiceIdRoute;
  '/payments/$paymentId': typeof AuthenticatedPaymentsPaymentIdRoute;
  '/settings/account': typeof AuthenticatedSettingsAccountRoute;
  '/settings/misc': typeof AuthenticatedSettingsMiscRoute;
  '/budgets': typeof AuthenticatedBudgetsIndexRoute;
  '/expenses': typeof AuthenticatedExpensesIndexRoute;
  '/invoices': typeof AuthenticatedInvoicesIndexRoute;
  '/payments': typeof AuthenticatedPaymentsIndexRoute;
  '/settings': typeof AuthenticatedSettingsIndexRoute;
  '/staff': typeof AuthenticatedStaffIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren;
  '/auth': typeof AuthRouteRouteWithChildren;
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren;
  '/auth/login': typeof AuthLoginRoute;
  '/_authenticated/': typeof AuthenticatedIndexRoute;
  '/_authenticated/budgets/$budgetId': typeof AuthenticatedBudgetsBudgetIdRoute;
  '/_authenticated/expenses/$expenseId': typeof AuthenticatedExpensesExpenseIdRoute;
  '/_authenticated/invoices/$invoiceId': typeof AuthenticatedInvoicesInvoiceIdRoute;
  '/_authenticated/payments/$paymentId': typeof AuthenticatedPaymentsPaymentIdRoute;
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute;
  '/_authenticated/settings/misc': typeof AuthenticatedSettingsMiscRoute;
  '/_authenticated/budgets/': typeof AuthenticatedBudgetsIndexRoute;
  '/_authenticated/expenses/': typeof AuthenticatedExpensesIndexRoute;
  '/_authenticated/invoices/': typeof AuthenticatedInvoicesIndexRoute;
  '/_authenticated/payments/': typeof AuthenticatedPaymentsIndexRoute;
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute;
  '/_authenticated/staff/': typeof AuthenticatedStaffIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/auth'
    | '/settings'
    | '/auth/login'
    | '/'
    | '/budgets/$budgetId'
    | '/expenses/$expenseId'
    | '/invoices/$invoiceId'
    | '/payments/$paymentId'
    | '/settings/account'
    | '/settings/misc'
    | '/budgets'
    | '/expenses'
    | '/invoices'
    | '/payments'
    | '/settings/'
    | '/staff';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/auth'
    | '/auth/login'
    | '/'
    | '/budgets/$budgetId'
    | '/expenses/$expenseId'
    | '/invoices/$invoiceId'
    | '/payments/$paymentId'
    | '/settings/account'
    | '/settings/misc'
    | '/budgets'
    | '/expenses'
    | '/invoices'
    | '/payments'
    | '/settings'
    | '/staff';
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/_authenticated/settings'
    | '/auth/login'
    | '/_authenticated/'
    | '/_authenticated/budgets/$budgetId'
    | '/_authenticated/expenses/$expenseId'
    | '/_authenticated/invoices/$invoiceId'
    | '/_authenticated/payments/$paymentId'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/misc'
    | '/_authenticated/budgets/'
    | '/_authenticated/expenses/'
    | '/_authenticated/invoices/'
    | '/_authenticated/payments/'
    | '/_authenticated/settings/'
    | '/_authenticated/staff/';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren;
  AuthRouteRoute: typeof AuthRouteRouteWithChildren;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth';
      path: '/auth';
      fullPath: '/auth';
      preLoaderRoute: typeof AuthRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_authenticated': {
      id: '/_authenticated';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthenticatedRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_authenticated/': {
      id: '/_authenticated/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof AuthenticatedIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/auth/login': {
      id: '/auth/login';
      path: '/login';
      fullPath: '/auth/login';
      preLoaderRoute: typeof AuthLoginRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
    '/_authenticated/settings': {
      id: '/_authenticated/settings';
      path: '/settings';
      fullPath: '/settings';
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/staff/': {
      id: '/_authenticated/staff/';
      path: '/staff';
      fullPath: '/staff';
      preLoaderRoute: typeof AuthenticatedStaffIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/';
      path: '/';
      fullPath: '/settings/';
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport;
      parentRoute: typeof AuthenticatedSettingsRouteRoute;
    };
    '/_authenticated/payments/': {
      id: '/_authenticated/payments/';
      path: '/payments';
      fullPath: '/payments';
      preLoaderRoute: typeof AuthenticatedPaymentsIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/invoices/': {
      id: '/_authenticated/invoices/';
      path: '/invoices';
      fullPath: '/invoices';
      preLoaderRoute: typeof AuthenticatedInvoicesIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/expenses/': {
      id: '/_authenticated/expenses/';
      path: '/expenses';
      fullPath: '/expenses';
      preLoaderRoute: typeof AuthenticatedExpensesIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/budgets/': {
      id: '/_authenticated/budgets/';
      path: '/budgets';
      fullPath: '/budgets';
      preLoaderRoute: typeof AuthenticatedBudgetsIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/settings/misc': {
      id: '/_authenticated/settings/misc';
      path: '/misc';
      fullPath: '/settings/misc';
      preLoaderRoute: typeof AuthenticatedSettingsMiscRouteImport;
      parentRoute: typeof AuthenticatedSettingsRouteRoute;
    };
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account';
      path: '/account';
      fullPath: '/settings/account';
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport;
      parentRoute: typeof AuthenticatedSettingsRouteRoute;
    };
    '/_authenticated/payments/$paymentId': {
      id: '/_authenticated/payments/$paymentId';
      path: '/payments/$paymentId';
      fullPath: '/payments/$paymentId';
      preLoaderRoute: typeof AuthenticatedPaymentsPaymentIdRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/invoices/$invoiceId': {
      id: '/_authenticated/invoices/$invoiceId';
      path: '/invoices/$invoiceId';
      fullPath: '/invoices/$invoiceId';
      preLoaderRoute: typeof AuthenticatedInvoicesInvoiceIdRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/expenses/$expenseId': {
      id: '/_authenticated/expenses/$expenseId';
      path: '/expenses/$expenseId';
      fullPath: '/expenses/$expenseId';
      preLoaderRoute: typeof AuthenticatedExpensesExpenseIdRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/budgets/$budgetId': {
      id: '/_authenticated/budgets/$budgetId';
      path: '/budgets/$budgetId';
      fullPath: '/budgets/$budgetId';
      preLoaderRoute: typeof AuthenticatedBudgetsBudgetIdRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute;
  AuthenticatedSettingsMiscRoute: typeof AuthenticatedSettingsMiscRoute;
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute;
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren = {
  AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
  AuthenticatedSettingsMiscRoute: AuthenticatedSettingsMiscRoute,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute
};

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(AuthenticatedSettingsRouteRouteChildren);

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren;
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute;
  AuthenticatedBudgetsBudgetIdRoute: typeof AuthenticatedBudgetsBudgetIdRoute;
  AuthenticatedExpensesExpenseIdRoute: typeof AuthenticatedExpensesExpenseIdRoute;
  AuthenticatedInvoicesInvoiceIdRoute: typeof AuthenticatedInvoicesInvoiceIdRoute;
  AuthenticatedPaymentsPaymentIdRoute: typeof AuthenticatedPaymentsPaymentIdRoute;
  AuthenticatedBudgetsIndexRoute: typeof AuthenticatedBudgetsIndexRoute;
  AuthenticatedExpensesIndexRoute: typeof AuthenticatedExpensesIndexRoute;
  AuthenticatedInvoicesIndexRoute: typeof AuthenticatedInvoicesIndexRoute;
  AuthenticatedPaymentsIndexRoute: typeof AuthenticatedPaymentsIndexRoute;
  AuthenticatedStaffIndexRoute: typeof AuthenticatedStaffIndexRoute;
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedBudgetsBudgetIdRoute: AuthenticatedBudgetsBudgetIdRoute,
  AuthenticatedExpensesExpenseIdRoute: AuthenticatedExpensesExpenseIdRoute,
  AuthenticatedInvoicesInvoiceIdRoute: AuthenticatedInvoicesInvoiceIdRoute,
  AuthenticatedPaymentsPaymentIdRoute: AuthenticatedPaymentsPaymentIdRoute,
  AuthenticatedBudgetsIndexRoute: AuthenticatedBudgetsIndexRoute,
  AuthenticatedExpensesIndexRoute: AuthenticatedExpensesIndexRoute,
  AuthenticatedInvoicesIndexRoute: AuthenticatedInvoicesIndexRoute,
  AuthenticatedPaymentsIndexRoute: AuthenticatedPaymentsIndexRoute,
  AuthenticatedStaffIndexRoute: AuthenticatedStaffIndexRoute
};

const AuthenticatedRouteRouteWithChildren = AuthenticatedRouteRoute._addFileChildren(
  AuthenticatedRouteRouteChildren
);

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute;
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute
};

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(AuthRouteRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
